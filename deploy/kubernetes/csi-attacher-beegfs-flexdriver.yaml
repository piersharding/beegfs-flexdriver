# This YAML file contains all API objects that are necessary to run external
# CSI attacher for nfs flex adapter
#
# In production, this needs to be in separate files, e.g. service account and
# role and role binding needs to be created once, while stateful set may
# require some tuning.
#
# In addition, mock CSI driver is hardcoded as the CSI driver.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-attacher

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-attacher-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-attacher-role
subjects:
  - kind: ServiceAccount
    name: csi-attacher
    namespace: default
roleRef:
  kind: ClusterRole
  name: external-attacher-runner
  apiGroup: rbac.authorization.k8s.io

---
kind: Service
apiVersion: v1
metadata:
  name: csi-attacher-beegfs-flexdriver
  labels:
    app: csi-attacher-beegfs-flexdriver
spec:
  selector:
    app: csi-attacher-beegfs-flexdriver
  ports:
    - name: dummy
      port: 12345

---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: csi-attacher-beegfs-flexdriver
spec:
  serviceName: "csi-attacher"
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-attacher-beegfs-flexdriver
    spec:
      serviceAccount: csi-attacher
      imagePullSecrets:
        - name: gitlab-registry
      containers:
        - name: csi-attacher
          image: quay.io/k8scsi/csi-attacher:v0.3.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/

        - name: beegfs
          image: ${DOCKER_IMAGE}
          args :
            - "--nodeid=$(NODE_ID)"
            - "--drivername=csi-beegfs-flexdriver"
            - "--endpoint=$(CSI_ENDPOINT)"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
            - name: BEEGFS_ROOT
              value: ${BEEGFS_ROOT}
          imagePullPolicy: "Always"
          volumeMounts:
            - name: socket-dir
              mountPath: /plugin
            - name: beegfs-mount-dir
              mountPath: ${BEEGFS_ROOT}
            # - name: nvmenode-mount-dir
            #   mountPath: /mnt/nvmenode
            - name: syslog
              mountPath: /dev/log
      volumes:
        - name: socket-dir
          emptyDir:
        - name: beegfs-mount-dir
          hostPath:
            path: ${BEEGFS_ROOT}
            type: Directory
        # - name: nvmenode-mount-dir
        #   hostPath:
        #     path: /mnt/nvmenode
        #     type: Directory
        - name: syslog
          hostPath:
            path: /dev/log
